use math_engine::parser::{Parsable, Parser};

macro_rules! parser_eq {
    ($input:expr, $expected:expr) => {
        assert_eq!(
            $expected,
            Parser::new($input)
                .parse()
                .unwrap()
                .simplify()
                .simplify()
                .simplify()
                .simplify()
                .simplify()
                .simplify()
                .simplify()
                .simplify()
                .simplify()
                .to_tex()
        );
    };
}

#[test]
fn basic_operations() {
    parser_eq!("4/2", "2");
    parser_eq!("40/2", "20");
    parser_eq!("2*3*2", "12");
    parser_eq!("2+2+2", "6");
    parser_eq!("2+2", "4");
    parser_eq!("1+2", "3");
    parser_eq!("56+7*5", "91");
    parser_eq!("11*8-8*4", "56");
    parser_eq!("76*46-35*39", "2131");
    parser_eq!("54/8+26/8", "10");
    parser_eq!("8*7-4*6", "32");
    parser_eq!("5*6+2*4", "38");
    parser_eq!("12*31-14*22", "64");
    parser_eq!("3821+1347", "5168");
    parser_eq!("2512+3246", "5758");
    parser_eq!("4462+9543", "14005");
    parser_eq!("9948+5499", "15447");
    parser_eq!("9745+3726", "13471");
    parser_eq!("4577+6201", "10778");
    parser_eq!("5465+1202", "6667");
    parser_eq!("8762+7355", "16117");
    parser_eq!("4578+7377", "11955");
    parser_eq!("1057+7800", "8857");
    parser_eq!("5962+8912", "14874");
    parser_eq!("2353+4636", "6989");
    parser_eq!("4156+3737", "7893");
    parser_eq!("4784+8377", "13161");
    parser_eq!("3269+9289", "12558");
    parser_eq!("5031+5768", "10799");
    parser_eq!("8415+2560", "10975");
    parser_eq!("7437+1221", "8658");
    parser_eq!("5786+4532", "10318");
    parser_eq!("4204+4621", "8825");
    parser_eq!("4438+4575", "9013");
    parser_eq!("3432+7387", "10819");
    parser_eq!("3821-1347", "2474");
    parser_eq!("4512-3246", "1266");
    parser_eq!("4462-2543", "1919");
    parser_eq!("9948-5499", "4449");
    parser_eq!("9745-3726", "6019");
    parser_eq!("6201-4513", "1688");
    parser_eq!("5465-1202", "4263");
    parser_eq!("8762-7355", "1407");
    parser_eq!("8578-7377", "1201");
    parser_eq!("9057-7800", "1257");
    parser_eq!("9424-8054", "1370");
    parser_eq!("9873-9724", "149");
    parser_eq!("5962-1912", "4050");
    parser_eq!("9353-4636", "4717");
    parser_eq!("4156-3737", "419");
    parser_eq!("4784-3377", "1407");
    parser_eq!("7269-3289", "3980");
    parser_eq!("5931-5768", "163");
    parser_eq!("7437-1221", "6216");
    parser_eq!("5786-4532", "1254");
    parser_eq!("7204-4621", "2583");
    parser_eq!("7838-4575", "3263");
    parser_eq!("8746*5", "43730");
    parser_eq!("46383*9", "417447");
    parser_eq!("78689*4", "314756");
    parser_eq!("46024*5", "230120");
    parser_eq!("27863*6", "167178");
    parser_eq!("76867*7", "538069");
    parser_eq!("79523*3", "238569");
    parser_eq!("13877*9", "124893");
    parser_eq!("24367*7", "170569");
    parser_eq!("79342*9", "714078");
    parser_eq!("13485*6", "80910");
    parser_eq!("48566*9", "437094");
    parser_eq!("97231*9", "875079");
    parser_eq!("32138*4", "128552");
    parser_eq!("23739*7", "166173");
    parser_eq!("37979*6", "227874");
    parser_eq!("15366*2", "30732");
    parser_eq!("76373*3", "229119");
    parser_eq!("12057*4", "48228");
    parser_eq!("97921*7", "685447");
    parser_eq!("48760*2", "97520");
    parser_eq!("38793*8", "310344");
    parser_eq!("16967*8", "135736");
    parser_eq!("24672*3", "74016");
    parser_eq!("3821*1347", "5146887");
    parser_eq!("4512*3246", "14645952");
    parser_eq!("4462*2543", "11346866");
    parser_eq!("9948*5499", "54704052");
    parser_eq!("9745*3726", "36309870");
    parser_eq!("6201*4513", "27985113");
    parser_eq!("5465*1202", "6568930");
    parser_eq!("8762*7355", "64444510");
    parser_eq!("8578*7377", "63279906");
    parser_eq!("9057*7800", "70644600");
    parser_eq!("9424*8054", "75900896");
    parser_eq!("9873*9724", "96005052");
    parser_eq!("5962*1912", "11399344");
    parser_eq!("9353*4636", "43360508");
    parser_eq!("4156*3737", "15530972");
    parser_eq!("4784*3377", "16155568");
    parser_eq!("7269*3289", "23907741");
    parser_eq!("5931*5768", "34210008");
    parser_eq!("8415*2560", "21542400");
    parser_eq!("8415*2560", "21542400");
    parser_eq!("7437*1221", "9080577");
    parser_eq!("5786*4532", "26222152");
    parser_eq!("7204*4621", "33289684");
    parser_eq!("7838*4575", "35858850");
    parser_eq!("8432*7387", "62287184");
    parser_eq!("8432*7387", "62287184");
    parser_eq!("7095/3", "2365");
    parser_eq!("4512/2", "2256");
    parser_eq!("7389/9", "821");
    parser_eq!("9872/8", "1234");
    parser_eq!("9416/4", "2354");
    parser_eq!("7587/9", "843");
    parser_eq!("7578/3", "2526");
    parser_eq!("8638/7", "1234");
    parser_eq!("8231/1", "8231");
    parser_eq!("6024/8", "753");
    parser_eq!("6840/15", "456");
    parser_eq!("7704/24", "321");
    parser_eq!("2568/6", "428");
    parser_eq!("5033/7", "719");
    parser_eq!("9475/5", "1895");
    parser_eq!("6024/8", "753");
    parser_eq!("7273/7", "1039");
    parser_eq!("3682/7", "526");
    parser_eq!("6738/2", "3369");
    parser_eq!("8464/8", "1058");
    parser_eq!("4755/5", "951");
    parser_eq!("5112/6", "852");
    parser_eq!("9468/12", "789");
    parser_eq!("5904/16", "369");
    parser_eq!("3821+1347*43", "61742");
    parser_eq!("4525-2070/6", "4180");
    parser_eq!("8124+1347-4371", "5100");
    parser_eq!("7124-2070+1392", "6446");
    parser_eq!("4284/2+1347*43", "60063");
    parser_eq!("8285/5-5256/8", "1000");
    parser_eq!("3482*3-7432/4", "8588");
    parser_eq!("8285*8/5-5256+4361", "12361");
    parser_eq!("1288*2*4+5416/4/2", "10981");
    parser_eq!("4265*3-3236*2+1454*4", "12139");
    //   >>) 822 · 9 · 6 : 3 − 632 · 11 : 2 = 11320 l) 4265 : 5 + 6438 : 6 + 17848 : 8 = 4157
    //   >>ufgabe 12:
    //   >>) 1203 + 6799 + 5684 + 2156 + 9852 = 25694
    //   >>) 9982 − 595 − 651 − 3197 − 1637 = 3902
    //   >>) 11 · 4 · 6 · 7 · 3 = 5544
    //   >>) 1587 + 9613 + 9477 + 2674 + 2987 = 26338
    //   >>) 8745 − 2971 − 841 − 1052 − 681 = 3200
    //   >> ) 5 · 2 · 4 · 9 · 7 = 2520
    //   >>) 8461 + 5625 + 1098 + 6950 + 8509 = 30643
    //   >>) 7894 − 412 − 753 − 951 − 456 = 5322
    //   >>) 12 · 3 · 5 · 10 · 9 = 16200
    //   >>
    //   >>
    //   >>
    //   >>ommatzsch Repetitorium der Mathematik
    //   >>) 2 + 6 · 3 − 5 = 15 b) 12 − 20 : 5 + 8 · 2 = 24
    //   >>) 2 · 8 : 4 + 2 − 6 : 2 = 3 d) 63 − 4 · 7 − 3 · 3 + 15 = 41
    //   >>) 12 · 4 − 6 · 5 + 33 · 7 − 43 · 4 = 77 f ) 10 · 45 − 15 : 5 · 60 + 34 = 304
    //   >>) 7 + 3 · 17 + 56 · 6 − 123 = 271 h) 55 · 48 : 4 : 3 − 12 · 3 = 184
    //   >>) 54 · 11 − 9 · 47 − 72 : 2 · 3 = 63 j) 74 · 3 − 4 · 8 + 32 · 5 = 350
    //   >>) 2 · 4 · 5 · 6 − 12 · 5 = 180 l) 864 : 8 : 3 + 23 · 7 − 12 · 4 = 141
    //   >>) 142 · 13 − 24 · 82 : 4 + 91 · 12 = 2446 n) 1249 · 34 − 2135 : 5 + 235 · 5 = 43214
    //   >>ufgabe 14: Berechne das Ergebnis.
    //   >>) 2 · 4 + 6 · 3 − 2 · 11 = 4 b) 4 · 12 : 3 − 5 · 2 + 3 = 9
    //   >>) 75 : 5 − 5 + 72 : 8 · 3 = 37 d) 10 · 9 − 3 · 2 · 9 = 36
    //   >>) 6 + 6 · 5 · 9 − 3 · 6 = 258 f ) 81 : 3 : 3 + 6 · 7 − 5 · 7 = 16
    //   >>) 55 − 3 · 7 + 32 − 4 · 3 · 2 = 42 h) 15 · 4 − 9 · 3 − 4 · 5 : 2 = 23
    //   >>) 60 : 5 : 6 + 24 · 5 − 7 · 9 = 59 j) 11 · 99 − 2 · 6 : 4 · 8 = 1065
    //   >>) 54 : 9 · 3 + 7 · 5 · 3 = 123 l) 5 · 5 · 4 : 10 + 9 · 4 : 3 = 22
    //   >>) 42 − 11 · 3 + 3 · 12 = 45 n) 49 · 5 : 7 − 6 · 2 + 4 · 7 = 51
    //   >>ufgabe 15: Berechne das Ergebnis.
    //   >>) 4731 + 3772 + 9141 + 1156 + 11278 + 3731 + 7542 + 1127 + 9346 = 51824
    //   >>) 156 + 59342 + 3482 + 45642 + 284921 + 6432 + 25 + 27381 + 22833 = 450214
    //   >>) 826265 − 1661 − 5683 − 34667 − 3727 − 8790 − 5204 − 4267 = 76226
    //   >>) 438693 − 2362 − 2677 − 6431 − 6530 − 3256 − 1354 − 7532 − 2637 = 405914
    //   >>) 36377 + 2367 + 2326 − 2362 − 6432 + 3467 − 9032 + 9463 − 7524 − 7345 = 21305
    //   >> ) 89349 + 3256 − 8347 + 8939 · 11 − 4578 + 3250 − 6784 · 5 = 147339
    //   >>) 3422 · 312 − 26806 + 6 · 7846 − 92357 + 8356 · 8 − 4362 = 1058063
    //   >>) 29857 − 23658 + 26 · 366 − 543 + 23568 − 485 · 38 − 436 + 326 − 2666 − 735 = 16799
    //
    parser_eq!(
        "29857-23658+26*366-543+23568-485*38-436+326-2666-735",
        "16799"
    );
}

#[test]
fn decimal() {
    parser_eq!("1.3*7-4.5*0.8", "5.5");
    parser_eq!("5.2*7-3*4.7", "22.3");
    parser_eq!("1.2*5.7+9*0.2", "8.64");
}

#[test]
fn braces() {
    parser_eq!("45+7*(98-144/9)", "619");
    parser_eq!("(13*21-112)*4+264/24", "655");
    parser_eq!("(6*5+9*8)/3-3*7", "13");
}
